using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;
using System.Windows;
using System.Windows.Controls;
using System.Windows.Data;
using System.Windows.Documents;
using System.Windows.Input;
using System.Windows.Media;
using System.Windows.Media.Imaging;
using System.Windows.Navigation;
using System.Windows.Shapes;
using Oracle.DataAccess.Client;
using System.Data;

namespace ELREORS
{
    /// <summary>
    /// Interaction logic for Admin_History.xaml
    /// </summary>
    public partial class Admin_History : Page
    {
        OracleConnection conn;
        DataTable dt;
        public Admin_History()
        {
            InitializeComponent();
            conn = App.conn;
            dp_filter1.SelectedDate = DateTime.ParseExact("2019-01-01", "yyyy-MM-dd",
                                       System.Globalization.CultureInfo.CurrentCulture);
            dp_filter2.SelectedDate = DateTime.Now;
            loaddata();
        }

        public void loaddata()
        {
            string query = "select h.ID , h.KODE_HJUAL as \"NO NOTA\", h.TANGGAL , h.NOMOR_MEJA as \"MEJA\", p.NAMA as PEGAWAI , h.TOTAL_HARGA as TOT , " +
                    "case when h.status = 0 then 'InProcess' " +
                    "when h.status = 1 then 'Confirmed' " +
                    "when h.status = 2 then 'Complteted' " +
                    "when h.status = 3 then 'Editted' " +
                    "when h.status = 4 then 'Void' " +
                    "else '-' end as \"STATUS\" " +
                    "from hjual h " +
                    "join pegawai p on p.id = h.id_pegawai where h.id is not null ";

            if (cbShowVoid.IsChecked==false)
            {
                query += "and h.status <> 4 ";
            }
            if (cbShowOnProcess.IsChecked==false)
            {
                query += "and h.status <> 0 ";
            }


            if (dp_filter1.SelectedDate == null || dp_filter2.SelectedDate == null)
            {
                OracleDataAdapter da = new OracleDataAdapter(
                    query+"order by 1", conn);

                dt = new DataTable();
                da.Fill(dt);
                dataGrid.ItemsSource = dt.DefaultView;
            }
            else if(dp_filter1.SelectedDate != null && dp_filter2.SelectedDate != null)
            {
                string tgl1 = dp_filter1.SelectedDate.ToString().Split(' ')[0];
                string tgl2 = dp_filter2.SelectedDate.ToString().Split(' ')[0];
                OracleDataAdapter da = new OracleDataAdapter(
                    query+ "and " +
                    $"to_date(to_char(h.tanggal,'dd/mm/yyyy'),'dd/mm/yyyy') <= to_date('{tgl2}','dd/mm/yyyy') and " +
                    $"to_date(to_char(h.tanggal,'dd/mm/yyyy'),'dd/mm/yyyy') >=to_date('{tgl1}','dd/mm/yyyy') order by 1" , conn);
                dt = new DataTable();
                da.Fill(dt);
                dataGrid.ItemsSource = dt.DefaultView;
            }

            int total=0;
            foreach (DataRow item in dt.Rows)
            {
                total += Convert.ToInt32(item[5]);
            }

            textTotal.Text = "Total : "+total.ToString("C");
            textJumlahNota.Text = "Jumlah Nota : "+dt.Rows.Count;
        }

        private void btn_report_Click(object sender, RoutedEventArgs e)
        {

        }

        private void DateChange(object sender, SelectionChangedEventArgs e)
        {
            loaddata();
        }

        private void btnShowChart_Click(object sender, RoutedEventArgs e)
        {
            Admin_History_Chart w = new Admin_History_Chart(dp_filter1.SelectedDate.Value, dp_filter2.SelectedDate.Value);
            w.ShowDialog();
        }

        private void dataGrid_MouseDoubleClick(object sender, MouseButtonEventArgs e)
        {
            int idx = dataGrid.SelectedIndex;
            if (idx<0)
            {
                return;
            }
            string kodenota = dt.Rows[idx]["NO NOTA"].ToString();
            string id = dt.Rows[idx]["ID"].ToString();
            Admin_History_Details w = new Admin_History_Details(kodenota,id);
            w.ShowDialog();
            loaddata();
        }

        private void dataGrid_Loaded(object sender, RoutedEventArgs e)
        {
            //            dataGrid.Columns[5].ClipboardContentBinding.StringFormat = "C";
        }

        private void dataGrid_AutoGeneratedColumns(object sender, EventArgs e)
        {
            dataGrid.Columns[6].Visibility = Visibility.Collapsed;//ini kolom data asli
            dataGrid.Columns[0].DisplayIndex = 6;
            dataGrid.Columns[1].Width = new DataGridLength(1, DataGridLengthUnitType.Star);
            dataGrid.Columns[2].Width = new DataGridLength(2, DataGridLengthUnitType.Star);
            dataGrid.Columns[3].Width = new DataGridLength(2, DataGridLengthUnitType.Star);
            dataGrid.Columns[4].Width = new DataGridLength(1, DataGridLengthUnitType.Star);
            dataGrid.Columns[5].Width = new DataGridLength(2, DataGridLengthUnitType.Star);
            dataGrid.Columns[6].Width = new DataGridLength(2, DataGridLengthUnitType.Star);
            dataGrid.Columns[0].Width = new DataGridLength(2, DataGridLengthUnitType.Star);
            dataGrid.Columns[7].Width = new DataGridLength(2, DataGridLengthUnitType.Star);
        }

        private void btnRefresh_Click(object sender, RoutedEventArgs e)
        {
            loaddata();
        }

        private void cbShowVoid_Unchecked(object sender, RoutedEventArgs e)
        {
            loaddata();
        }

        private void cbShowVoid_Checked(object sender, RoutedEventArgs e)
        {
            loaddata();
        }

        private void cbShowOnProcess_Checked(object sender, RoutedEventArgs e)
        {
            loaddata();
        }

        private void cbShowOnProcess_Unchecked(object sender, RoutedEventArgs e)
        {
            loaddata();
        }
    }
}
