<Window
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ELREORS"
        xmlns:System="clr-namespace:System;assembly=mscorlib" x:Class="ELREORS.Meja"
        mc:Ignorable="d"
        x:Name="MenuMeja"
        Title="Meja" Height="768" Width="1366" WindowState="Maximized">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="btmMinStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false"/>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnMinStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnPlusStyle1" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnPlusStyle2" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnMinStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnPlustStyle3" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnPrevStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnNextStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnBersihStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnPesanStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="btnEditStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true"/>
                            <Trigger Property="IsPressed" Value="true"/>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid Margin="0,2,0,-1.6">
        <Grid.RowDefinitions>
            <RowDefinition/>
            <RowDefinition Height="0*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="683*"/>
            <ColumnDefinition Width="683*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="lbNama" Grid.Column="0" Margin="38,39,0,0" Content="Meja" FontSize="32" HorizontalAlignment="Left" VerticalAlignment="Top" Foreground="#FFF1DABF" Width="80" Height="53" />
        <Label x:Name="lbM" Grid.Column="0" Content="1" FontSize="32" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="120,39,0,0" Foreground="#FFF1DABF" Width="27" Height="53"/>
        <Label x:Name="oList" Grid.Column="0" Margin="38,97,0,0">
            <Label.FontSize>
                <System:Double>20</System:Double>
            </Label.FontSize>
            <Label.Width>
                <System:Double>96</System:Double>
            </Label.Width>
            <Label.Height>
                <System:Double>37</System:Double>
            </Label.Height>
            <Label.VerticalAlignment>
                <VerticalAlignment>top</VerticalAlignment>
            </Label.VerticalAlignment>
            <Label.HorizontalAlignment>
                <HorizontalAlignment>left</HorizontalAlignment>
            </Label.HorizontalAlignment> Order List
        </Label>
        <DataGrid x:Name="dataOrder" Height="auto" Width="auto" Margin="25,130,10,80.4" FontSize="20" ColumnWidth="*" Grid.Column="0" AutoGeneratedColumns="dataOrder_AutoGeneratedColumns">
            <DataGrid.Columns>
                <DataGridTextColumn Visibility="Hidden" x:Name="columntotal" Binding="{Binding Harga, ConverterCulture=id-ID, StringFormat=C}" Header="Harga"/>
            </DataGrid.Columns>
        </DataGrid>
        <Label Content="Total Harga: " FontSize="20" Height="36" Width="120" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="428,0,0,15.4"/>
        <Label x:Name="lbTH" Content="" FontSize="20" Height="36" Width="10" Grid.Column="0" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="550,0,0,15.4"/>
        <Label x:Name="lbResto" Content="ELREORS" HorizontalContentAlignment="Right" FontSize="36" Height="58" Width="398" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Top" Margin="272,38,10,0" Foreground="#FFF1DABF"/>


        <Label x:Name="Menu" Grid.Column="1" Margin="296,38,293,0" Foreground="#FFF1DABF">
            <Label.FontSize>
                <System:Double>32</System:Double>
            </Label.FontSize>
            <Label.Width>
                <System:Double>91</System:Double>
            </Label.Width>
            <Label.Height>
                <System:Double>53</System:Double>
            </Label.Height>
            <Label.VerticalAlignment>
                <VerticalAlignment>top</VerticalAlignment>
            </Label.VerticalAlignment>
            <Label.HorizontalAlignment>
                <HorizontalAlignment>center</HorizontalAlignment>
            </Label.HorizontalAlignment> Menu
        </Label>
        <Button x:Name="btnBersih" Width="120" Height="50" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="18" Margin="25,0,0,15.4" Content="Bersihkan" Click="btnBersih_Click" Foreground="#FFF1DABF" Style="{DynamicResource btnBersihStyle}"/>
        <Button x:Name="btnPesan" Width="120" Height="50" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="18" Margin="155,0,0,15.4" Content="Pesan" Click="btnPesan_Click" Foreground="#FFF1DABF" Style="{DynamicResource btnPesanStyle}"/>
        <Button x:Name="btnEdit" Width="120" Height="50" HorizontalAlignment="Left" VerticalAlignment="Bottom" FontSize="18" Margin="289,0,0,15.4" Content="Edit Pesanan" Click="btnEdit_Click" Style="{DynamicResource btnEditStyle}" Foreground="#FFF1DABF"/>


        <Button x:Name="btnApp" Width="200" Height="50" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Appetizer" FontSize="32" Margin="10,55,0,0" Click="btnApp_Click" Visibility="Hidden"/>
        <Button x:Name="btnMain" Width="200" Height="50" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top"  Content="Main Course" FontSize="32" Margin="220,55,0,0" Click="btnMain_Click" Visibility="Hidden"/>
        <Button x:Name="btnDes" Width="200" Height="50" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Top" Content="Dessert" FontSize="32" Margin="430,55,0,0" Click="btnDes_Click" Visibility="Hidden"/>
        <ComboBox x:Name="cbKategori" Grid.Column="1" Height="40" VerticalAlignment="Top" Margin="454,47,26,0" FontSize="24" HorizontalContentAlignment="Center" VerticalContentAlignment="Center" SelectionChanged="cbKategori_SelectionChanged"/>

        <Button x:Name="btnPrev" Content="" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="1" Height="60" Width="60" Margin="0,0,116,25.4" Click="btnPrev_Click" Style="{DynamicResource btnPrevStyle}"/>
        <Button x:Name="btnNext" Content="" HorizontalAlignment="Right" VerticalAlignment="Bottom" Grid.Column="1" Width="60" Height="60" Margin="0,0,34,25.4" Click="btnNext_Click" Style="{DynamicResource btnNextStyle}" />

        <Image x:Name="img1" Width="160" Height="160" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="28,115,0,0"/>
        <Image x:Name="img2" Width="160" Height="160" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="20,315,0,0"/>
        <Image x:Name="img3" Width="160" Height="160" Grid.Column="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="20,510,0,0"/>

        <Label x:Name="lbN1" Content="nasi goreng" Grid.Column="1" Height="50" Width="200" FontSize="28" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,115,0,0"/>
        <Label x:Name="lbK1" Content="nasi digoreng dengan minyak" Grid.Column="1" Height="40" Width="450" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,155,0,0"/>
        <Label x:Name="Rp1" Content="Rp." Grid.Column="1" Height="40" Width="40" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,185,0,0"/>
        <Label x:Name="lbH1" Content="" Grid.Column="1" Height="40" Width="420" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="250,185,0,0"/>
        <Button x:Name="btnMin1" Content="-" Width="40" Height="50" FontSize="30" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,235,0,0" Grid.Column="1" Click="btnMin1_Click" Foreground="#FFF1DABF" Style="{DynamicResource btnMinStyle1}"/>
        <Label x:Name="lbJ1" Content="0" Width="40" Height="50" FontSize="30" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="1" Margin="254,235,0,0"/>
        <Button x:Name="btnPlus1" Content="+" Width="40" Height="50" FontSize="30" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="295,235,0,0" Grid.Column="1" Click="btnPlus1_Click" Foreground="#FFF1DABF" Style="{DynamicResource btnPlusStyle1}"/>

        <Label x:Name="lbN2" Content="nasi goreng" Grid.Column="1" Height="50" Width="200" FontSize="28" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,315,0,0"/>
        <Label x:Name="lbK2" Content="nasi digoreng dengan minyak" Grid.Column="1" Height="40" Width="450" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,355,0,0"/>
        <Label x:Name="Rp2" Content="Rp." Grid.Column="1" Height="40" Width="40" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,385,0,0"/>
        <Label x:Name="lbH2" Content="" Grid.Column="1" Height="40" Width="420" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="250,385,0,0"/>
        <Button x:Name="btnMin2" Content="-" Width="40" Height="50" FontSize="30" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,435,0,0" Grid.Column="1" Click="btnMin2_Click" Foreground="#FFF1DABF" Style="{DynamicResource btmMinStyle}"/>
        <Label x:Name="lbJ2" Content="0" Width="40" Height="50" FontSize="30" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="1" Margin="254,435,0,0"/>
        <Button x:Name="btnPlus2" Content="+" Width="40" Height="50" FontSize="30" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="295,435,0,0" Grid.Column="1" Click="btnPlus2_Click" Foreground="#FFF1DABF" Style="{DynamicResource btnPlusStyle2}"/>

        <Label x:Name="lbN3" Content="nasi goreng" Grid.Column="1" Height="50" Width="200" FontSize="28" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,510,0,0"/>
        <Label x:Name="lbK3" Content="nasi digoreng dengan minyak" Grid.Column="1" Height="40" Width="450" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,550,0,0"/>
        <Label x:Name="Rp3" Content="Rp." Grid.Column="1" Height="40" Width="40" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,580,0,0"/>
        <Label x:Name="lbH3" Content="" Grid.Column="1" Height="40" Width="420" FontSize="20" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="250,580,0,0"/>
        <Button x:Name="btnMin3" Content="-" Width="40" Height="50" FontSize="30" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="210,630,0,0" Grid.Column="1" Click="btnMin3_Click" Foreground="#FFF1DABF" Style="{DynamicResource btnMinStyle3}"/>
        <Label x:Name="lbJ3" Content="0" Width="40" Height="50" FontSize="30" VerticalAlignment="Top" HorizontalAlignment="Left" Grid.Column="1" Margin="254,630,0,0"/>
        <Button x:Name="btnPlus3" Content="+" Width="40" Height="50" FontSize="30" VerticalContentAlignment="Center" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="295,630,0,0" Grid.Column="1" Click="btnPlus3_Click" Foreground="#FFF1DABF" Style="{DynamicResource btnPlustStyle3}"/>
        <Label x:Name="lbSek" Content="1" Grid.Column="1" FontSize="16" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="541,0,119,-4.6" Height="32" Grid.RowSpan="2" Width="20"/>
        <Label Content="dari" Grid.Column="1" FontSize="16" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="577,0,66,-4.6" Height="32" Grid.RowSpan="2" Width="37"/>
        <Label x:Name="lbMax" Content="1" Grid.Column="1" FontSize="16" VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="630,0,30,-4.6" Height="32" Grid.RowSpan="2" Width="20"/>
    </Grid>
</Window>
